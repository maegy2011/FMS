// نظام الإدارة المالية | FMS
// Financial Management System with Andalusian Islamic Design

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// أنواع المستخدمين والأدوار
enum UserRole {
  SYSTEM_MANAGER
  EXPERT
  ACCOUNT_HEAD
  REVIEWER
  ACCOUNTANT
  ADVISOR
}

// أنواع الجهات
enum EntityType {
  MAIN
  SUBSIDIARY
  EMPLOYEE
}

// أنواع الإيرادات
enum IncomeType {
  TAXES
  FEES
  FINES
  GRANTS
  DONATIONS
  INVESTMENTS
  OTHER
}

// حالات الإيرادات
enum IncomeStatus {
  PENDING
  COLLECTED
  OVERDUE
  CANCELLED
}

// أسئلة الأمان المتاحة
enum SecurityQuestion {
  PLACE_OF_BIRTH
  MOTHER_NAME
  FIRST_SCHOOL
  FAVORITE_COLOR
  CHILDHOOD_FRIEND
  GRADUATION_YEAR
  FIRST_CAR
  FAVORITE_TEACHER
  BIRTH_CITY
  GRANDFATHER_NAME
}

// المستخدمون
model User {
  id              String   @id @default(cuid())
  username        String   @unique
  email           String   @unique
  password        String
  fullName        String
  role            UserRole
  isActive        Boolean  @default(true)
  isVerified      Boolean  @default(false)
  lastLogin       DateTime?
  failedAttempts  Int      @default(0)
  lockedUntil     DateTime?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  // علاقات
  securityQuestions UserSecurityQuestion[]
  incomes           Income[]
  entities          Entity[]
  reports           Report[]
  auditLogs         AuditLog[]
  
  @@map("users")
}

// أسئلة الأمان للمستخدمين
model UserSecurityQuestion {
  id         String           @id @default(cuid())
  userId     String
  question   SecurityQuestion
  answer     String
  createdAt  DateTime         @default(now())
  
  user       User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([userId, question])
  @@map("user_security_questions")
}

// الجهات
model Entity {
  id          String     @id @default(cuid())
  name        String
  type        EntityType
  parentId    String?
  address     String?
  phone       String?
  email       String?
  description String?
  isActive    Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  
  // علاقات
  parent      Entity?    @relation("EntityHierarchy", fields: [parentId], references: [id])
  children    Entity[]   @relation("EntityHierarchy")
  incomes     Income[]
  createdBy   User       @relation(fields: [createdById], references: [id])
  createdById String
  
  @@map("entities")
}

// الإيرادات
model Income {
  id          String       @id @default(cuid())
  amount      Float
  type        IncomeType
  description String?
  status      IncomeStatus @default(PENDING)
  dueDate     DateTime
  collectedAt DateTime?
  entityId    String
  createdBy   User         @relation(fields: [createdById], references: [id])
  createdById String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  
  // علاقات
  entity      Entity       @relation(fields: [entityId], references: [id])
  reports     Report[]
  
  @@map("incomes")
}

// دفتر الاستاذ
model Ledger {
  id          String   @id @default(cuid())
  incomeId    String?
  entityId    String?
  description String
  debit       Float
  credit      Float
  balance     Float
  date        DateTime @default(now())
  createdAt   DateTime @default(now())
  
  @@map("ledger")
}

// التقارير
model Report {
  id          String   @id @default(cuid())
  title       String
  type        String
  content     String
  incomeIds   String   // JSON array of income IDs
  generatedBy User     @relation(fields: [generatedById], references: [id])
  generatedById String
  createdAt   DateTime @default(now())
  
  // علاقات
  incomes     Income[]
  
  @@map("reports")
}

// سجل التدقيق
model AuditLog {
  id          String   @id @default(cuid())
  userId      String
  action      String
  entityType  String?
  entityId    String?
  details     String?
  ipAddress   String?
  userAgent   String?
  createdAt   DateTime @default(now())
  
  user        User     @relation(fields: [userId], references: [id])
  
  @@map("audit_logs")
}

// إعدادات النظام
model SystemSettings {
  id          String   @id @default(cuid())
  key         String   @unique
  value       String
  description String?
  updatedAt   DateTime @updatedAt
  
  @@map("system_settings")
}

// جلسات Captcha
model CaptchaSession {
  id        String   @id @default(cuid())
  sessionId String   @unique
  question  String
  answer    String
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())
  
  @@map("captcha_sessions")
}